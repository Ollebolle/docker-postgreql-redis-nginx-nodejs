server {
    listen 80;
    listen [::]:80;
    client_max_body_size 200M;

    root /webroot;
    index index.html index.htm;

    server_name template.com www.template.com;

    location / {
      rewrite ^(.*) https://$host$1 permanent;
    }
}

server {
    listen 443;
    client_max_body_size 200M;

    ssl on;
    ssl_certificate /ssl/fullchain.cer;
    ssl_certificate_key /ssl/template.com.key;
    # Enables latest TLS version, in order of preference.
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    # Enable strong ciphers and prefer server ciphers over client ciphers
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve prime256v1:secp384r1;

    server_name template.com www.template.com;

    root /webroot;
    index index.html index.htm;

    location /api/ {
        proxy_pass http://backend:3400/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
    }

    location /metrics {
        expires -1;
        proxy_pass http://backend:3400/swagger-stats/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
    }

    location /public {
        alias /public;
        expires max;
    }
}
